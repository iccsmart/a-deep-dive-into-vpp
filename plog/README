=== VPP Configuration ===
# cat /etc/vpp/startup.conf
unix {
  nodaemon
  log /tmp/vpp.log
  cli-listen localhost:5002
  cli-no-banner
  full-coredump
}

api-trace {
  on
}

cpu {
  skip-cores 11
  main-core 11
  corelist-workers 12-13
}

dpdk {
  socket-mem 256,256
  nchannels 4
  num-mbufs 16384
  dev 0000:82:00.0
  dev 0000:82:00.1
  uio-driver igb_uio
}


[root@fpga kmod]# telnet 0 5002
Trying 0.0.0.0...
Connected to 0.
Escape character is '^]'.
DBGvpp# set int ip address TenGigabitEthernet82/0/0 100.1.0.1/24
DBGvpp# set int state TenGigabitEthernet82/0/0 up
DBGvpp# set int ip address TenGigabitEthernet82/0/1 101.1.0.1/24
DBGvpp# set int state TenGigabitEthernet82/0/1 up
DBGvpp# show interfaces address
TenGigabitEthernet82/0/0 (up):
  100.1.0.1/24
TenGigabitEthernet82/0/1 (up):
  101.1.0.1/24
local0 (dn):
DBGvpp# ip route table 0 48.0.0.0/8 via TenGigabitEthernet82/0/0
DBGvpp# set ip arp static fib-id 0 TenGigabitEthernet82/0/0 100.1.0.1 6c:92:bf:46:46:7a
DBGvpp# ip route table 0 add 48.0.0.0/8 via 100.1.0.1 TenGigabitEthernet82/0/0
DBGvpp# set interface ip table TenGigabitEthernet82/0/0 0
set interface ip table: interface TenGigabitEthernet82/0/0 has address 100.1.0.1
DBGvpp# 
DBGvpp# ip route table 0 16.0.0.0/8 via TenGigabitEthernet82/0/1
DBGvpp# set ip arp static fib-id 0 TenGigabitEthernet82/0/1 101.1.0.1 6c:92:bf:46:46:7b
DBGvpp# ip route table 0 add 16.0.0.0/8 via 101.1.0.1 TenGigabitEthernet82/0/1
DBGvpp# set interface ip table TenGigabitEthernet82/0/1 0
set interface ip table: interface TenGigabitEthernet82/0/1 has address 101.1.0.1
DBGvpp#


DBGvpp# show version verbose
Version:                  v17.07-rc0~dirty
Compiled by:              root
Compile host:             fpga
Compile date:             Wed May 31 17:02:58 CST 2017
Compile location:         /home/mwang/fdio/vpp
Compiler:                 GCC 4.8.3 20140911 (Red Hat 4.8.3-9)
Current PID:              6533
DBGvpp# show dpdk version
DPDK Version:             DPDK 17.02.0
DPDK EAL init args:       -c 3800 -n 4 --huge-dir /run/vpp/hugepages --file-prefix vpp -w 0000:82:00.0 -w 0000:82:00.1 --master-lcore 11 --socket-mem 256,256 
DBGvpp# 


DBGvpp# show threads
ID     Name                Type        LWP     Sched Policy (Priority)  lcore  Core   Socket State     
0      vpp_main                        6533    other (0)                11     1      1      
1      vpp_wk_0            workers     6535    other (0)                12     2      1      
2      vpp_wk_1            workers     6536    other (0)                13     3      1      
3                          stats       6538    other (0)                0      0      0     


=== TRex Configuration ===
# cat /etc/trex_cfg.yaml
- port_limit      : 2
  version         : 2
#List of interfaces. Change to suit your setup. Use ./dpdk_setup_ports.py -s to see available options
  interfaces    : ["00:03.0","00:04.0"] 
  port_info       :  # Port IPs. Change to suit your needs. In case of loopback, you can leave as is.
          - ip         : 100.1.0.2
            dest_mac   : [0x90,0xe2,0xba,0x86,0x03,0x8c]
            src_mac    : [0x6c,0x92,0xbf,0x46,0x46,0x7a]
          - ip         : 101.1.0.2
            dest_mac   : [0x90,0xe2,0xba,0x86,0x03,0x8d]
            src_mac    : [0x6c,0x92,0xbf,0x46,0x46,0x7b]
  generator :
    distribution : "seq"
    clients_start : "16.1.0.8"
    clients_end   : "16.1.0.8"
    servers_start : "48.1.0.8"
    servers_end   : "48.1.0.8"
    clients_per_gb : 1
    min_clients : 1
    dual_port_mask : "1.0.0.0"


root@TG:/home/michael/fdio/trex/scripts# pwd
/home/michael/fdio/trex/scripts
root@TG:/home/michael/fdio/trex/scripts# ./t-rex-64 -f avl/sfr_delay_10_1g.yaml -c 2 -p -l 100 -d 100000 -m 50  --rx-check 128 --limit-ports 2


=== How to create Flame Graph ===
git clone https://github.com/brendangregg/FlameGraph.git
cd FlameGraph/
perf record -F 99 -p $(pgrep vpp) -g -- sleep 60
perf script > out.perf
./stackcollapse-perf.pl out.perf > out.folded
./flamegraph.pl --title="Flame Graph: VPP(v17.07-rc0) Stack Frame" out.folded > vpp-v17.07-rc0_stack-frame.svg


=== perf output ===
# perf stat -p $(pgrep vpp) -- sleep 60

 Performance counter stats for process id '6533':

     179793.151094      task-clock (msec)         #    2.997 CPUs utilized           [100.00%]
               265      context-switches          #    0.001 K/sec                   [100.00%]
                 0      cpu-migrations            #    0.000 K/sec                   [100.00%]
                25      page-faults               #    0.000 K/sec                  
   430,994,372,461      cycles                    #    2.397 GHz                     [100.00%]
   <not supported>      stalled-cycles-frontend  
   <not supported>      stalled-cycles-backend   
   943,869,557,509      instructions              #    2.19  insns per cycle         [100.00%]
   131,853,155,269      branches                  #  733.360 M/sec                   [100.00%]
       318,577,041      branch-misses             #    0.24% of all branches        

      60.001024238 seconds time elapsed
      

# perf report
Samples: 17K of event 'cycles', Event count (approx.): 431122679408                                                                                                             
+   32.98%     0.00%   vpp_main  libvppinfra.so.0.0.0    [.] clib_calljmp
+   32.98%     0.00%   vpp_main  libvlib.so.0.0.0        [.] thread0
+   32.98%     0.00%   vpp_main  libvlib.so.0.0.0        [.] vlib_main
+   32.98%     0.00%   vpp_main  libvlib.so.0.0.0        [.] vlib_main_loop
+   32.59%     0.00%   vpp_wk_0  libvppinfra.so.0.0.0    [.] clib_calljmp
+   32.59%     0.00%   vpp_wk_0  libvlib.so.0.0.0        [.] vlib_worker_thread_fn
+   32.59%     0.00%   vpp_wk_0  libvlib.so.0.0.0        [.] vlib_worker_loop
+   32.59%     0.04%   vpp_wk_0  libvlib.so.0.0.0        [.] vlib_main_or_worker_loop
+   32.48%     0.00%   vpp_wk_1  libvppinfra.so.0.0.0    [.] clib_calljmp
+   32.48%     0.00%   vpp_wk_1  libvlib.so.0.0.0        [.] vlib_worker_thread_fn
+   32.48%     0.00%   vpp_wk_1  libvlib.so.0.0.0        [.] vlib_worker_loop
+   32.48%     0.06%   vpp_wk_1  libvlib.so.0.0.0        [.] vlib_main_or_worker_loop
+   32.41%     0.12%   vpp_wk_0  libvlib.so.0.0.0        [.] dispatch_node
+   32.34%     3.49%   vpp_main  libvlib.so.0.0.0        [.] vlib_main_or_worker_loop
+   32.32%     0.09%   vpp_wk_1  libvlib.so.0.0.0        [.] dispatch_node
+   31.10%     0.05%   vpp_wk_0  libvlib.so.0.0.0        [.] dispatch_pending_node
+   30.95%     0.03%   vpp_wk_1  libvlib.so.0.0.0        [.] dispatch_pending_node
+   24.06%     5.66%   vpp_main  libvlib.so.0.0.0        [.] dispatch_node
+   16.30%     0.00%   vpp_wk_0  libvnet.so.0.0.0        [.] ip4_lookup
+   15.97%     0.00%   vpp_wk_1  libvnet.so.0.0.0        [.] ip4_lookup
+   15.92%     1.49%   vpp_wk_0  libvnet.so.0.0.0        [.] ip4_lookup_inline
+   15.70%     1.45%   vpp_wk_1  libvnet.so.0.0.0        [.] ip4_lookup_inline
+   11.25%     0.73%   vpp_main  libc-2.17.so            [.] epoll_pwait
+    9.16%     1.72%   vpp_main  [kernel.kallsyms]       [k] system_call
+    6.28%     0.55%   vpp_main  [kernel.kallsyms]       [k] sys_epoll_pwait
+    5.72%     0.00%   vpp_wk_0  libvnet.so.0.0.0        [.] ip4_rewrite
+    5.63%     0.68%   vpp_wk_0  libvnet.so.0.0.0        [.] ip4_rewrite_inline
+    5.52%     0.00%   vpp_wk_1  libvnet.so.0.0.0        [.] ip4_rewrite
+    5.46%     0.71%   vpp_wk_1  libvnet.so.0.0.0        [.] ip4_rewrite_inline
+    5.37%     0.20%   vpp_wk_0  libvnet.so.0.0.0        [.] vlib_set_next_frame_buffer
+    5.30%     0.21%   vpp_wk_1  libvnet.so.0.0.0        [.] vlib_set_next_frame_buffer
+    5.04%     0.00%   vpp_wk_1  libvnet.so.0.0.0        [.] ip4_input_no_checksum
+    5.03%     0.00%   vpp_wk_0  libvnet.so.0.0.0        [.] ip4_input_no_checksum
+    4.80%     0.84%   vpp_wk_1  libvnet.so.0.0.0        [.] ip4_input_inline
+    4.75%     0.99%   vpp_wk_0  libvnet.so.0.0.0        [.] ip4_input_inline
+    3.67%     1.98%   vpp_wk_0  libvnet.so.0.0.0        [.] ip4_compute_flow_hash
+    3.60%     2.01%   vpp_wk_1  libvnet.so.0.0.0        [.] ip4_compute_flow_hash
+    3.33%     0.51%   vpp_wk_0  libvlib.so.0.0.0        [.] vlib_put_next_frame
+    3.29%     0.47%   vpp_wk_1  libvlib.so.0.0.0        [.] vlib_get_next_frame_internal
+    3.22%     0.47%   vpp_wk_0  libvlib.so.0.0.0        [.] vlib_get_next_frame_internal
+    3.19%     1.03%   vpp_main  libvppinfra.so.0.0.0    [.] timing_wheel_advance
+    3.17%     0.41%   vpp_wk_1  libvlib.so.0.0.0        [.] vlib_put_next_frame
Press '?' for help on key bindings 

